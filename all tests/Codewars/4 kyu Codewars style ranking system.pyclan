класс Юзер(
	ранг = -8;
	прогресс = 0;
	
	пройти === (я, ката) {
		если
			ката == 0 или ката паче 8 или ката меньше -8 или
			я.ранг паче 8 или я.ранг меньше -8 или я.ранг == 0 или 
			я.прогресс меньше 0:
				брось "ЭЭЭ";
	
		если я.ранг == ката:
			в я.прогресс = я.прогресс + 3;
		иначели я.ранг - 1 == ката и я.ранг != 1 или я.ранг - 2 == ката и я.ранг == 1:
			в я.прогресс = я.прогресс + 1;
		иначели ката паче я.ранг:
			если ката паче 0 и я.ранг меньше 0:
				в я.прогресс = я.прогресс + 10 * (ката - |я.ранг - 1|)**2;
			иначе:
				в я.прогресс = я.прогресс + 10 * (|ката| - |я.ранг|)**2;
		
		если я.прогресс >= 100 {
			раз = я.прогресс / 100;
			я.прогресс;
			раз;
			в я.прогресс = я.прогресс - 100 * раз;
			в я.ранг = я.ранг + раз;
			если я.ранг == 0:
				в я.ранг = 1;
		}	
	}
)

юзер = новый Юзер();
Ё
"ранг " + юзер.ранг;
"прогресс " + юзер.прогресс;
деяти юзер.пройти(-7);
"прогресс " + юзер.прогресс;
деяти юзер.пройти(-5);
"прогресс " + юзер.прогресс;
"ранг " + юзер.ранг;
Ё
Ё
деяти юзер.пройти(1);
"ранг " + юзер.ранг;
"прогресс " + юзер.прогресс;Ё
деяти юзер.пройти(3);
"ранг " + юзер.ранг;
"прогресс " + юзер.прогресс;

Ё
лень доделывать это до конца, но даже это показывает, что ООП данного языка хватает для  подобных задач.